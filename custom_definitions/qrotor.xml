<?xml version='1.0'?>
<mavlink>
  <include>minimal.xml</include>
  <version>3</version>
  <dialect>0</dialect>
  <enums>
    <enum name="OFFBOARD_CONTROL_MODE">
      <entry value="0" name="MODE_PASS_THROUGH_SI">
        <description>Pass moment values in [Nm] directly to the mixer</description>
      </entry>
      <entry value="1" name="MODE_THRUST_VECTOR_YAW">
        <description>Command thrust vector (Fx, Fy, Fz) in newtons, and yaw setpoint in [rad]</description>
      </entry>
      <entry value="2" name="MODE_THRUST_VECTOR_YAWRATE">
        <description>Command thrust vector (Fx, Fy, Fz) in newtons, and yaw-rate setpoint in [rad/s]</description>
      </entry>
      <entry value="3" name="MODE_ROLL_PITCH_YAWRATE_THRUST">
        <description>Command roll angle, pitch angle, yaw rate, and thrust norm in SI units</description>
      </entry>
      <entry value="4" name="MODE_ROLLRATE_PITCHTATE_YAWRATE_THRUST">
        <description>Command roll angle rate, pitch angle rate, yaw rate, and thrust norm in SI units</description>
      </entry>
      <entry value="5" name="MODE_POSITION_TARGET_YAW">
        <description>Command position target in meters and yaw in SI units</description>
      </entry>
      <entry value="6" name="MODE_PASS_THROUGH_PWM">
        <description>Pass PWM VALUES directly</description>
      </entry>
    </enum>
  </enums>

  <messages>
    <message id="180" name="OFFBOARD_CONTROL">
      <description>Custom offboard control; Send command mode type and values</description>
      <field type="uint8_t" name="mode" enum="OFFBOARD_CONTROL_MODE">Offboard control mode, see OFFBOARD_CONTROL_MODE</field>
      <field type="float" name="w"> Extra channel </field>
      <field type="float" name="x">X-channel, (typically, thrust in X-direction [N])</field>
      <field type="float" name="y">Y-channel, (typically, thrust in Y-direction [N])</field>
      <field type="float" name="z">Z-channel, (typically, thrust in Z-direction [N])</field>
      <field type="float" name="thrust">Thrust, (typically, thrust-scale [N])</field>
      <field type="float" name="yaw">Yaw setpoint [rad]</field>
      <field type="uint8_t" name="act">Acutator bit map</field>
    </message>
    <message id="181" name="POWER_READINGS">
      <description>Power module readings</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="float" name="voltage">Voltage in Volts</field>
      <field type="uint64_t" name="v_adc">Voltage ADC readings</field>
      <field type="float" name="current">Current in Amperes</field>
      <field type="uint64_t" name="c_adc">Current ADC readings</field>
    </message>
    <message id="182" name="ONBOARD_IMU">
      <description>The IMU readings in SI units in NWU body frame</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="float" name="xacc" units="m/s/s">X acceleration</field>
      <field type="float" name="yacc" units="m/s/s">Y acceleration</field>
      <field type="float" name="zacc" units="m/s/s">Z acceleration</field>
      <field type="float" name="xgyro" units="rad/s">Angular speed around X axis in body frame</field>
      <field type="float" name="ygyro" units="rad/s">Angular speed around Y axis in body frame</field>
      <field type="float" name="zgyro" units="rad/s">Angular speed around Z axis in body frame</field>
      <field type="float" name="xmag" units="gauss">X Magnetic field</field>
      <field type="float" name="ymag" units="gauss">Y Magnetic field</field>
      <field type="float" name="zmag" units="gauss">Z Magnetic field</field>
    </message>
    <message id="183" name="INPUT_SI">
      <description>The Final inputs applied to the drone in body frame</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="float" name="x">X-channel, (typically, thrust in X-direction [N])</field>
      <field type="float" name="y">Y-channel, (typically, thrust in Y-direction [N])</field>
      <field type="float" name="z">Z-channel, (typically, thrust in Z-direction [N])</field>
      <field type="float" name="thrust">Thrust, (typically, thrust-scale [N])</field>
    </message>
    <message id="184" name="INPUT_PWM">
      <description>The Final PWM applied to the drone</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="float" name="w">pwm1</field>
      <field type="float" name="x">pwm2</field>
      <field type="float" name="y">pwm3</field>
      <field type="float" name="z">pwm4</field>
    </message>
    <message id="185" name="SYSTEM_STATUS">
      <description>The system status info</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="float" name="loop_rate">freq</field>
      <field type="float" name="max_comms_rate">freq</field>
    </message>
  </messages>
</mavlink>
      